# 15 : 20

def solution(routes):
    answer = 0
    
    ll = len(routes)
    cam = -300001
    routes.sort(key=lambda x: x[1])
    
    for route in routes :
        if route[0] > cam :
            answer += 1
            cam = route[1]
    
    return answer

  
  """
  
  몇가지 방법이 있지만, 뒤의 값부터 비교하는 방법을 택했다.
  
  일단 자동차들을 도착하는 지점부터 정렬을 한다.
  
  맨 처음 도착한 자동차(a)보다, 그 후에 도착하는 자동차(b)의 시작 지점을 비교한다.
  
  b 자동차의 시작 지점과 a 자동차 도착지점을 비교한다.
  
  만약 b 자동차의 시작지점이 a 자동차 도착지점보다 크다면, 카메라 1대를 증가시켜 주고,
  
  포인트 지점을 b자동차의 도착지점으로 바꾼다.
  
  [           ]             a 자동차
  -8           -13
           [            ]    b 자동차
           -14          -5
           
           이럴 경우, 카메라는 추가하지 않고, 포인트 지점도 바꿔주지 않는다.
           
  [           ]        a
  -18         -13
                     [              ]    b
                     -5             -3
                     
                     이럴 경우, 카메라를 추가하고, 포인트 지점을 -3으로 바꿔준다.
                     
                     
  그림을 그려 설명과 코드를 보면 이해가 된다.
  
  """
